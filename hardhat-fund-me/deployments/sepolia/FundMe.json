{
  "address": "0x668Be55c5B7e8366E0aE69a62A62e4f0DB1fEE3E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "expensive_withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAdressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x240623af18e15af5558a970c278de4cb7234d375186720301ebb502595eb1a46",
  "receipt": {
    "to": null,
    "from": "0x6271e36d9097f8b372a97B80556708863f4CA532",
    "contractAddress": "0x668Be55c5B7e8366E0aE69a62A62e4f0DB1fEE3E",
    "transactionIndex": 29,
    "gasUsed": "961720",
    "logsBloom": "0x
    "blockHash": "0x803f556917f8dbaa2df5d6441cb898b3e0c58b07add3421523d19336d6094411",
    "transactionHash": "0x240623af18e15af5558a970c278de4cb7234d375186720301ebb502595eb1a46",
    "logs": [],
    "blockNumber": 5935060,
    "cumulativeGasUsed": "4022588",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "28e10fbd434bfe64f5bd13e8794abd59",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"expensive_withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAdressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Piotr G\\u0105siorek\",\"details\":\"The contract has a minimum amount of USD that can be funded\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FundMe\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract allows to fund the contract with a minimum amount of USD\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title FundMe\\n * @author Piotr G\\u0105siorek\\n * @notice This contract allows to fund the contract with a minimum amount of USD\\n * @dev The contract has a minimum amount of USD that can be funded\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    uint256 constant MINIMUM_USD = 50 * 1e18;\\n    address private immutable i_owner;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"this can be done only by the owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        // 1e18 = 1_000_000_000_000_000_000 wei\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) > MINIMUM_USD,\\n            \\\"Send more ETH!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function expensive_withdraw() public onlyOwner {\\n        for (uint256 i; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        // withdraw\\n        // transfer throws, has 2800 gas limit\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // returns bool, has 2800 gas limit\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"send failed!\\\");\\n\\n        // most powerful, does not have any limits\\n        (bool callSuccess /* bytes memory msgData */, ) = payable(msg.sender)\\n            .call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        address[] memory funders = s_funders; // gas optimization\\n        for (uint256 i; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess /* bytes memory msgData */, ) = payable(msg.sender)\\n            .call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAdressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xb7927a305728efcb98a41cb403e8424dd54cbb16f3ba0a202f7b4e8d54266b1b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License: MIT\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (\\n            ,\\n            /* uint80 roundId */ int256 price /* uint startedAt */ /* uint timeStamp */ /* uint80 answeredInRound */,\\n            ,\\n            ,\\n\\n        ) = priceFeed.latestRoundData();\\n\\n        // 3000.00000000\\n        return uint256(price * 1e10); // we want that value to have 18 decimals as well as wei\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethUsdPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethUsdPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xbf048bffed0bd0126f06b7b1b02044059486a59996bbd97cd956853c3f09acf0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200117f3803806200117f83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161100662000179600039600081816102d101528181610571015261065101526110066000f3fe6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd1461010c578063b60d428814610137578063d7b4750c14610141578063e78d1e1d1461017e57610083565b80633ccfd60b1461008d578063893d20e8146100a45780639a59cd9e146100cf57610083565b3661008357610081610195565b005b61008b610195565b005b34801561009957600080fd5b506100a26102cf565b005b3480156100b057600080fd5b506100b961056d565b6040516100c69190610a3e565b60405180910390f35b3480156100db57600080fd5b506100f660048036038101906100f19190610a8a565b610595565b6040516101039190610ad0565b60405180910390f35b34801561011857600080fd5b506101216105de565b60405161012e9190610b4a565b60405180910390f35b61013f610195565b005b34801561014d57600080fd5b5061016860048036038101906101639190610b91565b610608565b6040516101759190610a3e565b60405180910390f35b34801561018a57600080fd5b5061019361064f565b005b6802b5e3af16b18800006101d4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088990919063ffffffff16565b11610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90610c1b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c69190610c6a565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610354576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161038d575b5050505050905060005b815181101561045c5760008282815181106103ff576103fe610c9e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506103e1565b50600067ffffffffffffffff81111561047857610477610ccd565b5b6040519080825280602002602001820160405280156104a65781602001602082028036833780820191505090505b50600090805190602001906104bc929190610956565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e390610d2d565b60006040518083038185875af1925050503d8060008114610520576040519150601f19603f3d011682016040523d82523d6000602084013e610525565b606091505b5050905080610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090610d8e565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061061d5761061c610c9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156107795760008082815481106106f9576106f8610c9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506106d7565b50600067ffffffffffffffff81111561079557610794610ccd565b5b6040519080825280602002602001820160405280156107c35781602001602082028036833780820191505090505b50600090805190602001906107d9929190610956565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161080090610d2d565b60006040518083038185875af1925050503d806000811461083d576040519150601f19603f3d011682016040523d82523d6000602084013e610842565b606091505b5050905080610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d90610d8e565b60405180910390fd5b50565b600080610895836108c5565b90506000670de0b6b3a764000085836108ae9190610dae565b6108b89190610e1f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190610edd565b5050509150506402540be4008161094e9190610f58565b915050919050565b8280548282559060005260206000209081019282156109cf579160200282015b828111156109ce5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610976565b5b5090506109dc91906109e0565b5090565b5b808211156109f95760008160009055506001016109e1565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a28826109fd565b9050919050565b610a3881610a1d565b82525050565b6000602082019050610a536000830184610a2f565b92915050565b600080fd5b610a6781610a1d565b8114610a7257600080fd5b50565b600081359050610a8481610a5e565b92915050565b600060208284031215610aa057610a9f610a59565b5b6000610aae84828501610a75565b91505092915050565b6000819050919050565b610aca81610ab7565b82525050565b6000602082019050610ae56000830184610ac1565b92915050565b6000819050919050565b6000610b10610b0b610b06846109fd565b610aeb565b6109fd565b9050919050565b6000610b2282610af5565b9050919050565b6000610b3482610b17565b9050919050565b610b4481610b29565b82525050565b6000602082019050610b5f6000830184610b3b565b92915050565b610b6e81610ab7565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b600060208284031215610ba757610ba6610a59565b5b6000610bb584828501610b7c565b91505092915050565b600082825260208201905092915050565b7f53656e64206d6f72652045544821000000000000000000000000000000000000600082015250565b6000610c05600e83610bbe565b9150610c1082610bcf565b602082019050919050565b60006020820190508181036000830152610c3481610bf8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7582610ab7565b9150610c8083610ab7565b9250828201905080821115610c9857610c97610c3b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d17600083610cfc565b9150610d2282610d07565b600082019050919050565b6000610d3882610d0a565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d78600b83610bbe565b9150610d8382610d42565b602082019050919050565b60006020820190508181036000830152610da781610d6b565b9050919050565b6000610db982610ab7565b9150610dc483610ab7565b9250828202610dd281610ab7565b91508282048414831517610de957610de8610c3b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2a82610ab7565b9150610e3583610ab7565b925082610e4557610e44610df0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e6f81610e50565b8114610e7a57600080fd5b50565b600081519050610e8c81610e66565b92915050565b6000819050919050565b610ea581610e92565b8114610eb057600080fd5b50565b600081519050610ec281610e9c565b92915050565b600081519050610ed781610b65565b92915050565b600080600080600060a08688031215610ef957610ef8610a59565b5b6000610f0788828901610e7d565b9550506020610f1888828901610eb3565b9450506040610f2988828901610ec8565b9350506060610f3a88828901610ec8565b9250506080610f4b88828901610e7d565b9150509295509295909350565b6000610f6382610e92565b9150610f6e83610e92565b9250828202610f7c81610e92565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fb457610fb3610c3b565b5b8282058414831517610fc957610fc8610c3b565b5b509291505056fea2646970667358221220d308f410262b287f0c1c60318f60b866f6a665587add039d1a7b4b818d3d1a7764736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd1461010c578063b60d428814610137578063d7b4750c14610141578063e78d1e1d1461017e57610083565b80633ccfd60b1461008d578063893d20e8146100a45780639a59cd9e146100cf57610083565b3661008357610081610195565b005b61008b610195565b005b34801561009957600080fd5b506100a26102cf565b005b3480156100b057600080fd5b506100b961056d565b6040516100c69190610a3e565b60405180910390f35b3480156100db57600080fd5b506100f660048036038101906100f19190610a8a565b610595565b6040516101039190610ad0565b60405180910390f35b34801561011857600080fd5b506101216105de565b60405161012e9190610b4a565b60405180910390f35b61013f610195565b005b34801561014d57600080fd5b5061016860048036038101906101639190610b91565b610608565b6040516101759190610a3e565b60405180910390f35b34801561018a57600080fd5b5061019361064f565b005b6802b5e3af16b18800006101d4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088990919063ffffffff16565b11610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90610c1b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c69190610c6a565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610354576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161038d575b5050505050905060005b815181101561045c5760008282815181106103ff576103fe610c9e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506103e1565b50600067ffffffffffffffff81111561047857610477610ccd565b5b6040519080825280602002602001820160405280156104a65781602001602082028036833780820191505090505b50600090805190602001906104bc929190610956565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e390610d2d565b60006040518083038185875af1925050503d8060008114610520576040519150601f19603f3d011682016040523d82523d6000602084013e610525565b606091505b5050905080610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090610d8e565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061061d5761061c610c9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156107795760008082815481106106f9576106f8610c9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506106d7565b50600067ffffffffffffffff81111561079557610794610ccd565b5b6040519080825280602002602001820160405280156107c35781602001602082028036833780820191505090505b50600090805190602001906107d9929190610956565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161080090610d2d565b60006040518083038185875af1925050503d806000811461083d576040519150601f19603f3d011682016040523d82523d6000602084013e610842565b606091505b5050905080610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d90610d8e565b60405180910390fd5b50565b600080610895836108c5565b90506000670de0b6b3a764000085836108ae9190610dae565b6108b89190610e1f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190610edd565b5050509150506402540be4008161094e9190610f58565b915050919050565b8280548282559060005260206000209081019282156109cf579160200282015b828111156109ce5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610976565b5b5090506109dc91906109e0565b5090565b5b808211156109f95760008160009055506001016109e1565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a28826109fd565b9050919050565b610a3881610a1d565b82525050565b6000602082019050610a536000830184610a2f565b92915050565b600080fd5b610a6781610a1d565b8114610a7257600080fd5b50565b600081359050610a8481610a5e565b92915050565b600060208284031215610aa057610a9f610a59565b5b6000610aae84828501610a75565b91505092915050565b6000819050919050565b610aca81610ab7565b82525050565b6000602082019050610ae56000830184610ac1565b92915050565b6000819050919050565b6000610b10610b0b610b06846109fd565b610aeb565b6109fd565b9050919050565b6000610b2282610af5565b9050919050565b6000610b3482610b17565b9050919050565b610b4481610b29565b82525050565b6000602082019050610b5f6000830184610b3b565b92915050565b610b6e81610ab7565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b600060208284031215610ba757610ba6610a59565b5b6000610bb584828501610b7c565b91505092915050565b600082825260208201905092915050565b7f53656e64206d6f72652045544821000000000000000000000000000000000000600082015250565b6000610c05600e83610bbe565b9150610c1082610bcf565b602082019050919050565b60006020820190508181036000830152610c3481610bf8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7582610ab7565b9150610c8083610ab7565b9250828201905080821115610c9857610c97610c3b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d17600083610cfc565b9150610d2282610d07565b600082019050919050565b6000610d3882610d0a565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d78600b83610bbe565b9150610d8382610d42565b602082019050919050565b60006020820190508181036000830152610da781610d6b565b9050919050565b6000610db982610ab7565b9150610dc483610ab7565b9250828202610dd281610ab7565b91508282048414831517610de957610de8610c3b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2a82610ab7565b9150610e3583610ab7565b925082610e4557610e44610df0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e6f81610e50565b8114610e7a57600080fd5b50565b600081519050610e8c81610e66565b92915050565b6000819050919050565b610ea581610e92565b8114610eb057600080fd5b50565b600081519050610ec281610e9c565b92915050565b600081519050610ed781610b65565b92915050565b600080600080600060a08688031215610ef957610ef8610a59565b5b6000610f0788828901610e7d565b9550506020610f1888828901610eb3565b9450506040610f2988828901610ec8565b9350506060610f3a88828901610ec8565b9250506080610f4b88828901610e7d565b9150509295509295909350565b6000610f6382610e92565b9150610f6e83610e92565b9250828202610f7c81610e92565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fb457610fb3610c3b565b5b8282058414831517610fc957610fc8610c3b565b5b509291505056fea2646970667358221220d308f410262b287f0c1c60318f60b866f6a665587add039d1a7b4b818d3d1a7764736f6c63430008180033",
  "devdoc": {
    "author": "Piotr Gąsiorek",
    "details": "The contract has a minimum amount of USD that can be funded",
    "kind": "dev",
    "methods": {},
    "title": "FundMe",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract allows to fund the contract with a minimum amount of USD",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}