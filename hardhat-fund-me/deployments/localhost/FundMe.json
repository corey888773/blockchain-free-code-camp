{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9f61a19a2f57b81b5f460e5681480f4800b58f212950bd0d679b1c5570d9f68a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "737648",
    "logsBloom": "0x
    "blockHash": "0x437bc75724490a4e94c1376d4d05a63cc9c6e83fe73bef5e2141ad3e3b9fc470",
    "transactionHash": "0x9f61a19a2f57b81b5f460e5681480f4800b58f212950bd0d679b1c5570d9f68a",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "737648",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "e4b0ea25d899325aefc659cd9b2c9b8a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 constant MINIMUM_USD = 50 * 1e18;\\n    address immutable i_owner;\\n\\n    address[] funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // 1e18 = 1_000_000_000_000_000_000 wei\\n        require(\\n            msg.value.getConversionRate(priceFeed) > MINIMUM_USD,\\n            \\\"You have to send at least 1 ethernum for this transaction to pass\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i; i < funders.length; i++) {\\n            address funder = funders[i];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        // withdraw\\n        // transfer throws, has 2800 gas limit\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // returns bool, has 2800 gas limit\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"send failed!\\\");\\n\\n        // most powerful, does not have any limits\\n        (bool callSuccess /* bytes memory msgData */, ) = payable(msg.sender)\\n            .call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"this can be done only by the owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x82564446eabecbf3a0ef429746779854a245fb70595ddfd33409c2b1debeb148\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License: MIT\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (\\n            ,\\n            /* uint80 roundId */ int256 price /* uint startedAt */ /* uint timeStamp */ /* uint80 answeredInRound */,\\n            ,\\n            ,\\n\\n        ) = priceFeed.latestRoundData();\\n\\n        // 3000.00000000\\n        return uint256(price * 1e10); // we want that value to have 18 decimals as well as wei\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethUsdPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethUsdPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xbf048bffed0bd0126f06b7b1b02044059486a59996bbd97cd956853c3f09acf0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610d4c380380610d4c83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610bf461015860003960006102210152610bf46000f3fe6080604052600436106100435760003560e01c80633ccfd60b1461005c5780633e47d6f314610073578063741bef1a146100b0578063b60d4288146100db57610052565b36610052576100506100e5565b005b61005a6100e5565b005b34801561006857600080fd5b5061007161021f565b005b34801561007f57600080fd5b5061009a6004803603810190610095919061066e565b610459565b6040516100a791906106b4565b60405180910390f35b3480156100bc57600080fd5b506100c5610471565b6040516100d2919061072e565b60405180910390f35b6100e36100e5565b005b6802b5e3af16b1880000610124600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461049790919063ffffffff16565b11610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b906107f2565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102169190610841565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a4576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103495760008082815481106102c9576102c8610875565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506102a7565b50600067ffffffffffffffff811115610365576103646108a4565b5b6040519080825280602002602001820160405280156103935781602001602082028036833780820191505090505b50600090805190602001906103a9929190610564565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103d090610904565b60006040518083038185875af1925050503d806000811461040d576040519150601f19603f3d011682016040523d82523d6000602084013e610412565b606091505b5050905080610456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044d90610965565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806104a3836104d3565b90506000670de0b6b3a764000085836104bc9190610985565b6104c691906109f6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610acb565b5050509150506402540be4008161055c9190610b46565b915050919050565b8280548282559060005260206000209081019282156105dd579160200282015b828111156105dc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610584565b5b5090506105ea91906105ee565b5090565b5b808211156106075760008160009055506001016105ef565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063b82610610565b9050919050565b61064b81610630565b811461065657600080fd5b50565b60008135905061066881610642565b92915050565b6000602082840312156106845761068361060b565b5b600061069284828501610659565b91505092915050565b6000819050919050565b6106ae8161069b565b82525050565b60006020820190506106c960008301846106a5565b92915050565b6000819050919050565b60006106f46106ef6106ea84610610565b6106cf565b610610565b9050919050565b6000610706826106d9565b9050919050565b6000610718826106fb565b9050919050565b6107288161070d565b82525050565b6000602082019050610743600083018461071f565b92915050565b600082825260208201905092915050565b7f596f75206861766520746f2073656e64206174206c656173742031206574686560008201527f726e756d20666f722074686973207472616e73616374696f6e20746f2070617360208201527f7300000000000000000000000000000000000000000000000000000000000000604082015250565b60006107dc604183610749565b91506107e78261075a565b606082019050919050565b6000602082019050818103600083015261080b816107cf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061084c8261069b565b91506108578361069b565b925082820190508082111561086f5761086e610812565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006108ee6000836108d3565b91506108f9826108de565b600082019050919050565b600061090f826108e1565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b600061094f600b83610749565b915061095a82610919565b602082019050919050565b6000602082019050818103600083015261097e81610942565b9050919050565b60006109908261069b565b915061099b8361069b565b92508282026109a98161069b565b915082820484148315176109c0576109bf610812565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a018261069b565b9150610a0c8361069b565b925082610a1c57610a1b6109c7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610a4681610a27565b8114610a5157600080fd5b50565b600081519050610a6381610a3d565b92915050565b6000819050919050565b610a7c81610a69565b8114610a8757600080fd5b50565b600081519050610a9981610a73565b92915050565b610aa88161069b565b8114610ab357600080fd5b50565b600081519050610ac581610a9f565b92915050565b600080600080600060a08688031215610ae757610ae661060b565b5b6000610af588828901610a54565b9550506020610b0688828901610a8a565b9450506040610b1788828901610ab6565b9350506060610b2888828901610ab6565b9250506080610b3988828901610a54565b9150509295509295909350565b6000610b5182610a69565b9150610b5c83610a69565b9250828202610b6a81610a69565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ba257610ba1610812565b5b8282058414831517610bb757610bb6610812565b5b509291505056fea26469706673582212206422d5a0e4941ce9b6bd8970d975cafcda69bf2f458cc5bce806c6bae944603d64736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80633ccfd60b1461005c5780633e47d6f314610073578063741bef1a146100b0578063b60d4288146100db57610052565b36610052576100506100e5565b005b61005a6100e5565b005b34801561006857600080fd5b5061007161021f565b005b34801561007f57600080fd5b5061009a6004803603810190610095919061066e565b610459565b6040516100a791906106b4565b60405180910390f35b3480156100bc57600080fd5b506100c5610471565b6040516100d2919061072e565b60405180910390f35b6100e36100e5565b005b6802b5e3af16b1880000610124600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461049790919063ffffffff16565b11610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b906107f2565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102169190610841565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a4576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103495760008082815481106102c9576102c8610875565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506102a7565b50600067ffffffffffffffff811115610365576103646108a4565b5b6040519080825280602002602001820160405280156103935781602001602082028036833780820191505090505b50600090805190602001906103a9929190610564565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103d090610904565b60006040518083038185875af1925050503d806000811461040d576040519150601f19603f3d011682016040523d82523d6000602084013e610412565b606091505b5050905080610456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044d90610965565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806104a3836104d3565b90506000670de0b6b3a764000085836104bc9190610985565b6104c691906109f6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610acb565b5050509150506402540be4008161055c9190610b46565b915050919050565b8280548282559060005260206000209081019282156105dd579160200282015b828111156105dc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610584565b5b5090506105ea91906105ee565b5090565b5b808211156106075760008160009055506001016105ef565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063b82610610565b9050919050565b61064b81610630565b811461065657600080fd5b50565b60008135905061066881610642565b92915050565b6000602082840312156106845761068361060b565b5b600061069284828501610659565b91505092915050565b6000819050919050565b6106ae8161069b565b82525050565b60006020820190506106c960008301846106a5565b92915050565b6000819050919050565b60006106f46106ef6106ea84610610565b6106cf565b610610565b9050919050565b6000610706826106d9565b9050919050565b6000610718826106fb565b9050919050565b6107288161070d565b82525050565b6000602082019050610743600083018461071f565b92915050565b600082825260208201905092915050565b7f596f75206861766520746f2073656e64206174206c656173742031206574686560008201527f726e756d20666f722074686973207472616e73616374696f6e20746f2070617360208201527f7300000000000000000000000000000000000000000000000000000000000000604082015250565b60006107dc604183610749565b91506107e78261075a565b606082019050919050565b6000602082019050818103600083015261080b816107cf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061084c8261069b565b91506108578361069b565b925082820190508082111561086f5761086e610812565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006108ee6000836108d3565b91506108f9826108de565b600082019050919050565b600061090f826108e1565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b600061094f600b83610749565b915061095a82610919565b602082019050919050565b6000602082019050818103600083015261097e81610942565b9050919050565b60006109908261069b565b915061099b8361069b565b92508282026109a98161069b565b915082820484148315176109c0576109bf610812565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a018261069b565b9150610a0c8361069b565b925082610a1c57610a1b6109c7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610a4681610a27565b8114610a5157600080fd5b50565b600081519050610a6381610a3d565b92915050565b6000819050919050565b610a7c81610a69565b8114610a8757600080fd5b50565b600081519050610a9981610a73565b92915050565b610aa88161069b565b8114610ab357600080fd5b50565b600081519050610ac581610a9f565b92915050565b600080600080600060a08688031215610ae757610ae661060b565b5b6000610af588828901610a54565b9550506020610b0688828901610a8a565b9450506040610b1788828901610ab6565b9350506060610b2888828901610ab6565b9250506080610b3988828901610a54565b9150509295509295909350565b6000610b5182610a69565b9150610b5c83610a69565b9250828202610b6a81610a69565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ba257610ba1610812565b5b8282058414831517610bb757610bb6610812565b5b509291505056fea26469706673582212206422d5a0e4941ce9b6bd8970d975cafcda69bf2f458cc5bce806c6bae944603d64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}